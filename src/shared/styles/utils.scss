@mixin aspect-ratio($w: 1, $h: 1) {
  display: grid;

  > * {
    grid-column: 1;
    grid-row: 1;
    width: 100%;
    height: 100%;
  }

  &::after {
    content: "";

    grid-column: 1;
    grid-row: 1;
    
    width: 100%;
    height: 0;
    padding-top: calc($h / $w * 100%);
  }
}

@mixin with-fallback($font-family: '') {
  font-family: $font-family, Arial, Helvetica, sans-serif;
}

@mixin visually-hidden {
  position: absolute;

  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;

  border: 0;

  white-space: nowrap;

  overflow: hidden;
  clip-path: inset(100%);
  clip: rect(0 0 0 0);
}

@mixin media-desktop {
  @media (max-width: $screen-desktop) {
    @content;
  }
}

@mixin media-desktop-up {
  @media (min-width: calc($screen-desktop + 1px)) {
    @content;
  }
}

@mixin media-tablet {
  @media (max-width: $screen-tablet) {
    @content;
  }
}

@mixin media-tablet-up {
  @media (max-width: calc($screen-tablet + 1px)) {
    @content;
  }
}

@mixin media-mobile {
  @media (max-width: $screen-mobile) {
    @content;
  }
}

@mixin media-mobile-up {
  @media (max-width: calc($screen-mobile + 1px)) {
    @content;
  }
}

@mixin container {
  width: 100%;
  max-width: $container-max-width;
  margin: 0 auto;
  padding: 0 var(--container-x-paddings, #{$container-paddings-desktop});

  @include media-tablet {
    --container-x-paddings: #{$container-paddings-tablet};
  }

  @include media-mobile {
    --container-x-paddings: #{$container-paddings-mobile};
  }
}

@mixin container-width-bg($bg: white) {
  @include container;

  $container-margin: calc(calc(100vw - 100%) / 2);

  position: relative;

  &::after {
    content: "";

    position: absolute;
    right: calc($container-margin * -1);
    left: calc($container-margin * -1);

    height: 100%;

    background: $bg;
  }
}

@mixin gap($row-gap: 0, $col-gap: $row-gap) {
  margin: calc(-1 * #{$row-gap}) 0 0 calc(-1 * #{$col-gap});
  width: calc(100% + #{$row-gap});

  > * {
    margin: $row-gap 0 0 $col-gap;
  }
}

@mixin row-gap($row-gap) {
  @include gap($row-gap, 0);
}

@mixin column-gap($col-gap) {
  @include gap(0, $col-gap);
}
